#!/usr/bin/perl -wT

use strict;
use CGI;
use Data::Dumper;
use JSON;
use List::Util 'shuffle', 'min', 'max' ;
use POSIX;
use Template;
use XML::Simple;
use lib "lib/";
use GenericGenerator;
use CityGenerator;
use FlagGenerator;
our $q = CGI->new;


my $testcityid=GenericGenerator::set_seed();
if (defined $q->param('seed')){
    $testcityid=$q->param('seed');
}elsif (defined $q->param('cityid')){
    $testcityid=$q->param('cityid');
}elsif (defined $q->param('continent')){
    $testcityid=$q->param('continent').'00';
}elsif (defined $q->param('region')){
    $testcityid=$q->param('region').'0';
}



    my $flag=FlagGenerator::create_flag({seed=>$testcityid});
    # FlagGenerator::flesh_out_flag($flag);

if (defined $q->param('type') and $q->param('type') eq 'xml' ){
    print $q->header( 'text/xml' );
    print "<?xml version='1.0'  encoding='ISO-8859-1' ?>\n";
    print XMLout($flag);
}elsif (defined $q->param('type') and $q->param('type') eq 'json' ){
    print $q->header( 'application/json' );
    my $JSON  = JSON->new->utf8;
    $JSON->convert_blessed(1);
    print  $JSON->encode($flag);

}elsif (defined $q->param('type') and $q->param('type') eq 'dump' ){
    print $q->header( 'text/plain' );
    print Dumper $flag;
}else {
    print $q->header;
    print print_page($flag);
}

exit;

#################################################################################################
#################################################################################################
#################################################################################################

sub print_page {
}
